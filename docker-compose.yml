version: '3.8'
services:
  # PHP Service
  app:
    build:
      context: .
      dockerfile: ./docker/php-fpm/Dockerfile
      args:
        uid: 1000
        user: azuriom
    image: azuriom/php-fpm
    working_dir: /var/www
    networks:
      azuriom:
        ipv4_address: 192.168.0.2
    depends_on:
      mysql:
        condition: service_healthy
  #Nginx Service
  nginx:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
      args:
        - DOMAIN=${APP_DOMAIN}
    container_name: azuriom-webserver
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    env_file: .env
    volumes:
      - data:/var/www/html
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
      - ./.env:/var/www/html/.env
      - ./.env.example:/var/www/html/.env.example
    depends_on:
      - app
    networks:
      azuriom:
        ipv4_address: 192.168.0.3
  certbot:
    image: certbot/certbot:latest
    command: certonly -v --keep --non-interactive --register-unsafely-without-email --agree-tos --no-eff-email --duplicate --expand --webroot -w=/etc/letsencrypt --cert-name ${APP_DOMAIN} -d ${APP_DOMAIN}
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
    env_file: .env
    depends_on:
      - nginx
  # MySQL Service
  mysql:
    image: mysql/mysql-server:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: ${DB_DATABASE}
    volumes:
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
      - ./docker/mysql/my.cnf:/etc/my.cnf
      - mysqldata:/var/lib/mysql
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD
      interval: 5s
      retries: 10
    networks:
      azuriom:
        ipv4_address: 192.168.0.4
    expose:
      - 3306
    ports:
      - 3306:3306
  # Redis Service
  redis:
    image: redis:alpine
    networks:
      azuriom:
        ipv4_address: 192.168.0.5
    expose:
      - 6379
    ports:
      - 6379:6379
    volumes:
      - /data/redis:/data
    command: redis-server --appendonly yes
# Volumes
volumes:
  mysqldata:
  data:
networks:
  azuriom:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.0.0/24
